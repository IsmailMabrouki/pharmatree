{"ast":null,"code":"import { FETCH_MEDICINE_PRODUCTS_REQUEST, FETCH_MEDICINE_PRODUCTS_SUCCESS, FETCH_MEDICINE_PRODUCTS_FAILURE } from '../types';\nimport axios from 'axios';\nexport const fetchMedicineProductsRequest = () => ({\n  type: FETCH_MEDICINE_PRODUCTS_REQUEST\n});\nexport const fetchMedicineProductsSuccess = data => ({\n  type: FETCH_MEDICINE_PRODUCTS_SUCCESS,\n  data\n});\nexport const fetchMedicineProductsFailure = error => ({\n  type: FETCH_MEDICINE_PRODUCTS_FAILURE,\n  error\n});\nexport const fetchMedicineProducts = () => async dispatch => {\n  dispatch(fetchMedicineProductsRequest());\n\n  try {\n    // Make a fetch request\n    const response = await fetch('http://localhost:3600/api/products/');\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    dispatch(fetchMedicineProductsSuccess(data));\n  } catch (error) {\n    dispatch(fetchMedicineProductsFailure(error.message));\n  }\n};","map":{"version":3,"sources":["C:/Users/ismai/OneDrive/Bureau/projet GL1/dev/client/src/redux/actions/productAction.js"],"names":["FETCH_MEDICINE_PRODUCTS_REQUEST","FETCH_MEDICINE_PRODUCTS_SUCCESS","FETCH_MEDICINE_PRODUCTS_FAILURE","axios","fetchMedicineProductsRequest","type","fetchMedicineProductsSuccess","data","fetchMedicineProductsFailure","error","fetchMedicineProducts","dispatch","response","fetch","ok","Error","status","json","message"],"mappings":"AAAA,SACEA,+BADF,EAEEC,+BAFF,EAGEC,+BAHF,QAIO,UAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,4BAA4B,GAAG,OAAO;AACjDC,EAAAA,IAAI,EAAEL;AAD2C,CAAP,CAArC;AAIP,OAAO,MAAMM,4BAA4B,GAAIC,IAAD,KAAW;AACrDF,EAAAA,IAAI,EAAEJ,+BAD+C;AAErDM,EAAAA;AAFqD,CAAX,CAArC;AAKP,OAAO,MAAMC,4BAA4B,GAAIC,KAAD,KAAY;AACtDJ,EAAAA,IAAI,EAAEH,+BADgD;AAEtDO,EAAAA;AAFsD,CAAZ,CAArC;AAKP,OAAO,MAAMC,qBAAqB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAACP,4BAA4B,EAA7B,CAAR;;AAEA,MAAI;AACF;AACA,UAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,CAA5B;;AACA,QAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAW,uBAAsBH,QAAQ,CAACI,MAAO,EAAjD,CAAN;AACD;;AAED,UAAMT,IAAI,GAAG,MAAMK,QAAQ,CAACK,IAAT,EAAnB;AAEAN,IAAAA,QAAQ,CAACL,4BAA4B,CAACC,IAAD,CAA7B,CAAR;AACD,GAVD,CAUE,OAAOE,KAAP,EAAc;AACdE,IAAAA,QAAQ,CAACH,4BAA4B,CAACC,KAAK,CAACS,OAAP,CAA7B,CAAR;AACD;AACF,CAhBM","sourcesContent":["import {\r\n  FETCH_MEDICINE_PRODUCTS_REQUEST,\r\n  FETCH_MEDICINE_PRODUCTS_SUCCESS,\r\n  FETCH_MEDICINE_PRODUCTS_FAILURE,\r\n} from '../types';\r\nimport axios from 'axios';\r\n\r\nexport const fetchMedicineProductsRequest = () => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_REQUEST,\r\n});\r\n\r\nexport const fetchMedicineProductsSuccess = (data) => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const fetchMedicineProductsFailure = (error) => ({\r\n  type: FETCH_MEDICINE_PRODUCTS_FAILURE,\r\n  error,\r\n});\r\n\r\nexport const fetchMedicineProducts = () => async (dispatch) => {\r\n  dispatch(fetchMedicineProductsRequest());\r\n\r\n  try {\r\n    // Make a fetch request\r\n    const response = await fetch('http://localhost:3600/api/products/');\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! Status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    dispatch(fetchMedicineProductsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchMedicineProductsFailure(error.message));\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}